// license-header java merge-point
// Generated by andromda-jsf cartridge (controllers\ControllerImpl.java.vsl)
package com.systemsjr.basekolo.utils.counter.web.search;

import com.systemsjr.basekolo.utils.counter.vo.CounterSearchCriteria;
import com.systemsjr.basekolo.utils.counter.vo.CounterVO;
import java.io.Serializable;
import java.util.Arrays;
import java.util.Collection;
import java.util.Date;

/**
 * @see com.systemsjr.basekolo.utils.counter.web.search.CounterSearchController
 */
public class CounterSearchControllerImpl
    extends CounterSearchController
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -9010287488845999086L;

    /**
     * @see com.systemsjr.basekolo.utils.counter.web.search.CounterSearchController#initialiseSearchScreen(CounterSearchCriteria searchCriteria)
     */
    @Override
    public void initialiseSearchScreen(InitialiseSearchScreenForm form)
    {
        // populating value with dummy instance
        CounterSearchCriteria searchCriteria = new CounterSearchCriteria();
        searchCriteria.setCounterLength(new Integer((int)-677834750));
        searchCriteria.setCounterName(null);
        searchCriteria.setCurrentCount(new Long((long)1442916118));
        form.setSearchCriteria(searchCriteria);
    }

    /**
     * @see com.systemsjr.basekolo.utils.counter.web.search.CounterSearchController#doCounterDetails(java.lang.Long counterId, CounterVO counterVO)
     */
    @Override
    public void doCounterDetails(DoCounterDetailsForm form)
    {
        // populating value with dummy instance
        CounterVO counterVO = new CounterVO();
        counterVO.setCreatedAt(new Date());
        counterVO.setCreatedBy(null);
        counterVO.setModifiedAt(new Date());
        counterVO.setModifiedBy(null);
        counterVO.setId(new Long((long)3355));
        counterVO.setCounterLength(new Integer((int)-677834750));
        counterVO.setCounterName(null);
        counterVO.setCurrentCount(new Long((long)1442916118));
        form.setCounterVO(counterVO);
    }

    /**
     * @see com.systemsjr.basekolo.utils.counter.web.search.CounterSearchController#doCounterEdit(java.lang.Long counterId, CounterVO counterVO)
     */
    @Override
    public void doCounterEdit(DoCounterEditForm form)
    {
        // populating value with dummy instance
        CounterVO counterVO = new CounterVO();
        counterVO.setCreatedAt(new Date());
        counterVO.setCreatedBy(null);
        counterVO.setModifiedAt(new Date());
        counterVO.setModifiedBy(null);
        counterVO.setId(new Long((long)3355));
        counterVO.setCounterLength(new Integer((int)-677834750));
        counterVO.setCounterName(null);
        counterVO.setCurrentCount(new Long((long)1442916118));
        form.setCounterVO(counterVO);
    }

    /**
     * @see com.systemsjr.basekolo.utils.counter.web.search.CounterSearchController#doCountersSearch()
     */
    @Override
    public void doCountersSearch()
    {
    }

    /**
     * @see com.systemsjr.basekolo.utils.counter.web.search.CounterSearchController#exitCountersSearch()
     */
    @Override
    public void exitCountersSearch()
    {
    }

    /**
     * This dummy variable is used to populate the "counterLists" table.
     * You may delete it when you add you own code in this controller.
     */
    private static final Collection counterLists =
        Arrays.asList(new Object[] {
            new CounterLists("id-1", "code-1", "level-1", "previousLevel.code-1", "nextLevel.code-1"),
            new CounterLists("id-2", "code-2", "level-2", "previousLevel.code-2", "nextLevel.code-2"),
            new CounterLists("id-3", "code-3", "level-3", "previousLevel.code-3", "nextLevel.code-3"),
            new CounterLists("id-4", "code-4", "level-4", "previousLevel.code-4", "nextLevel.code-4"),
            new CounterLists("id-5", "code-5", "level-5", "previousLevel.code-5", "nextLevel.code-5"),
            new CounterLists("id-6", "code-6", "level-6", "previousLevel.code-6", "nextLevel.code-6"),
            new CounterLists("id-7", "code-7", "level-7", "previousLevel.code-7", "nextLevel.code-7"),
            new CounterLists("id-8", "code-8", "level-8", "previousLevel.code-8", "nextLevel.code-8"),
            new CounterLists("id-9", "code-9", "level-9", "previousLevel.code-9", "nextLevel.code-9"),
            new CounterLists("id-10", "code-10", "level-10", "previousLevel.code-10", "nextLevel.code-10"),
            new CounterLists("id-11", "code-11", "level-11", "previousLevel.code-11", "nextLevel.code-11"),
            new CounterLists("id-12", "code-12", "level-12", "previousLevel.code-12", "nextLevel.code-12"),
            new CounterLists("id-13", "code-13", "level-13", "previousLevel.code-13", "nextLevel.code-13"),
            new CounterLists("id-14", "code-14", "level-14", "previousLevel.code-14", "nextLevel.code-14"),
            new CounterLists("id-15", "code-15", "level-15", "previousLevel.code-15", "nextLevel.code-15"),
            new CounterLists("id-16", "code-16", "level-16", "previousLevel.code-16", "nextLevel.code-16"),
            new CounterLists("id-17", "code-17", "level-17", "previousLevel.code-17", "nextLevel.code-17"),
            new CounterLists("id-18", "code-18", "level-18", "previousLevel.code-18", "nextLevel.code-18"),
            new CounterLists("id-19", "code-19", "level-19", "previousLevel.code-19", "nextLevel.code-19"),
            new CounterLists("id-20", "code-20", "level-20", "previousLevel.code-20", "nextLevel.code-20")
        });

    /**
     * This inner class is used in the dummy implementation in order to get the web application
     * running without any manual programming.
     * You may delete this class when you add you own code in this controller.
     */
    public static final class CounterLists implements Serializable
    {
        private String id = null;
        private String code = null;
        private String level = null;
        private String previousLevelCode = null;
        private String nextLevelCode = null;

        public CounterLists(String id, String code, String level, String previousLevelCode, String nextLevelCode)
        {
            this.id = id;
            this.code = code;
            this.level = level;
            this.previousLevelCode = previousLevelCode;
            this.nextLevelCode = nextLevelCode;
        }

        public void setId(String id)
        {
            this.id = id;
        }

        public String getId()
        {
            return this.id;
        }

        public void setCode(String code)
        {
            this.code = code;
        }

        public String getCode()
        {
            return this.code;
        }

        public void setLevel(String level)
        {
            this.level = level;
        }

        public String getLevel()
        {
            return this.level;
        }

        public void setPreviousLevelCode(String previousLevelCode)
        {
            this.previousLevelCode = previousLevelCode;
        }

        public String getPreviousLevelCode()
        {
            return this.previousLevelCode;
        }

        public void setNextLevelCode(String nextLevelCode)
        {
            this.nextLevelCode = nextLevelCode;
        }

        public String getNextLevelCode()
        {
            return this.nextLevelCode;
        }

    }
}