// license-header java merge-point
//
/**
 * @author Generated by ServiceImpl.vsl in andromda-java-cartridge on 12/12/2018 05:56:38+0200 *
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package com.systemsjr.basekolo.utils.counter.service;

/**
 * @see com.systemsjr.basekolo.utils.counter.service.CounterService
 */
public class CounterServiceImpl
    implements com.systemsjr.basekolo.utils.counter.service.CounterService
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -5452809752037775520L;

    /**
     * @see com.systemsjr.basekolo.utils.counter.service.CounterService#findById(java.lang.Long)
     */
    @Override
    public com.systemsjr.basekolo.utils.counter.vo.CounterVO findById(java.lang.Long id)
    {
        // TODO implement public com.systemsjr.basekolo.utils.counter.vo.CounterVO findById(java.lang.Long id)
        return null;
    }

    /**
     * @see com.systemsjr.basekolo.utils.counter.service.CounterService#saveCounter(com.systemsjr.basekolo.utils.counter.vo.CounterVO)
     */
    @Override
    public com.systemsjr.basekolo.utils.counter.vo.CounterVO saveCounter(com.systemsjr.basekolo.utils.counter.vo.CounterVO counterVO)
    {
        // TODO implement public com.systemsjr.basekolo.utils.counter.vo.CounterVO saveCounter(com.systemsjr.basekolo.utils.counter.vo.CounterVO counterVO)
        return null;
    }

    /**
     * @see com.systemsjr.basekolo.utils.counter.service.CounterService#removeCounter(com.systemsjr.basekolo.utils.counter.vo.CounterVO)
     */
    @Override
    public void removeCounter(com.systemsjr.basekolo.utils.counter.vo.CounterVO counterVO)
    {
        // TODO implement public void removeCounter(com.systemsjr.basekolo.utils.counter.vo.CounterVO counterVO)
        throw new UnsupportedOperationException("com.systemsjr.basekolo.utils.counter.service.CounterService.removeCounter(com.systemsjr.basekolo.utils.counter.vo.CounterVO counterVO) Not implemented!");
    }

    /**
     * @see com.systemsjr.basekolo.utils.counter.service.CounterService#getAllCounters()
     */
    @Override
    public java.util.Collection getAllCounters()
    {
        // TODO implement public java.util.Collection getAllCounters()
        return null;
    }

    /**
     * @see com.systemsjr.basekolo.utils.counter.service.CounterService#getAllCountersArray()
     */
    @Override
    public com.systemsjr.basekolo.utils.counter.vo.CounterVO[] getAllCountersArray()
    {
        // TODO implement public com.systemsjr.basekolo.utils.counter.vo.CounterVO[] getAllCountersArray()
        return null;
    }

    /**
     * @see com.systemsjr.basekolo.utils.counter.service.CounterService#counterSearch(com.systemsjr.basekolo.utils.counter.vo.CounterSearchCriteria)
     */
    @Override
    public java.util.Collection counterSearch(com.systemsjr.basekolo.utils.counter.vo.CounterSearchCriteria searchCriteria)
    {
        // TODO implement public java.util.Collection counterSearch(com.systemsjr.basekolo.utils.counter.vo.CounterSearchCriteria searchCriteria)
        return null;
    }

    /**
     * @see com.systemsjr.basekolo.utils.counter.service.CounterService#counterSearchArray(com.systemsjr.basekolo.utils.counter.vo.CounterSearchCriteria)
     */
    @Override
    public com.systemsjr.basekolo.utils.counter.vo.CounterVO[] counterSearchArray(com.systemsjr.basekolo.utils.counter.vo.CounterSearchCriteria searchCriteria)
    {
        // TODO implement public com.systemsjr.basekolo.utils.counter.vo.CounterVO[] counterSearchArray(com.systemsjr.basekolo.utils.counter.vo.CounterSearchCriteria searchCriteria)
        return null;
    }
}
